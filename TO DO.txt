API key pedeo = k_t23pjq0u
API key cup = k_yhwr0i17

movies_data.db = [pedro_minha_lista]
cup_movies_data.db = [cup_minha_lista]

GITHUB
	aprender mais sobre git e github

BUILD 1 feita!!

BUILD 2

	MovieResults:
		mostrar as infos do filme no imdb
		escolher quais substituir (basic)

	IMDB API
		melhorar o backend de como as infos desejadas sao escolhidas
			talvez passar "info_type()" para dialogs.py 

		talvez implementar as funções de redirect, failure
		melhorar a função de error 
			descobrir como refazer a msm request
			(uma opção: salvar a url e deletar qnd a request retornar sucesso)

		colocar contador de api_calls

	----- upar no github

	limpar codigo desnecessario e/ou confuso
		Screen, etc
		
	DATABASE
		adicionar colunas para imagem, runtimeStr
		pedir opiniões se seria interessante adicionar mais algum

		usar a API pra pegar as informações nao completadas dos filmes (meus e da cup)

	----- upar no github
	----- BUILDAR

	BARRA DE PESQUISA
		talvez implementar funções nas toolbars (main e MovieResults)
			trocar textos
			trocar icones

		guia de pesquisa
			texto + (titulo, ano, categoria, prioridade, duração, etc)

	ITENS DO NAV DRAWER

	CONFIGURAÇÕES
		Lista:
			adicionar filmes a partir de um arquivo
			alterar o numero de filmes que aparecem ao abrir o app
			autoscroll para o filme sorteado ao iniciar o app on/off
			definir função para o icone de filme:
				detalhes, editar, imdb, etc

			opções adicionar e editar filme:
				- procurar automaticamente no IMDB e 
					+ mostrar opções / usar primeiro resultado
					+ substiuir informações / completar as nao informadas
						quais informações substituir
				- não procurar no IMBD -> não recomendado
					(mantem apenas os dados informados, sem imagem)

		Arquivos:
			mostrar diretorio dos arquivos .json, .db, .txt, etc
				deletar arquivos
			opção de buscar arquivos em user_data
			consertar "Tabela nao encontrada"
				buscar em /files, se nao achar:
				buscar em user_data, se nao achar:
				criar novo arquivo
			salvar as infos em /files ou user_data
				caso usar /files:
					opção de upar arquivos em user_data para caso att o ap


	SORTEADOR
		implementar sorteio com prioridades

	icone e tela de carregamento


lONGO PRAZO - depois de acabar as anteriores
	se necessario criar uma classe Filme ou Movie
	opção de gerar arquivo .txt ou .json
	opção de fazer backup do arquivo .db (local e nuvem)
	criar tela de login
		tentar criar conta no imdb api automaticamente para pegar a chave

	MENU ITEM
		procurar no imdb
		selecionar (como se fosse sorteado)

	SPEED DIAL
		mudar prioridade de varios
		procurar varios no imdb
		carregar mais filmes, caso tenha

	DATABASE
		passar as infos do arquivo .json para uma nova tabela no arquivo .db
			- em forma de string (json.dumps e json.loads)
				vantagem que nao precisa alterar os codigos que usam essa info

			- ou nova tabela CONFIGS
			profile        | account-circle
		    color          | Red
		    color_hue      | 600
		    accent         | Yellow
		    accent_hue     | 500
		    theme          | Dark
		    time_format    | %d/%m - %Hh%M
		    current_order  | ORDER BY title ASC, year DESC
		    selected       | 2003 - Matrix Revolutions

		fechar a conexao automaticamente depois de um intervalo n sem uso (clock.schedule_once)

	LISTA
		talvez desfazer remover filme
		limitar numero de filmes que aparecem ao abrir o app
		carregar mais itens -> botao no speed dial
		sub-itens para continuações
		usar imagem padrao caso nao consiga pegar da internet
		clicar no item -> se no modo de seleção, seleciona o item

    IMPLEMENTAR VARIAS LISTAS
    	lista de listas (segunda aba)
    	lista de assistidos
    	menu com novas opções
    		carregar na aba principal
    		compartilhar
    		excluir
    		renomear (?)

    	botao nova lista (no lugar do speed dial)

	FIREBASE
		criar database para armazenar dados "publicos"
			listas compartilhadas
				permissoes distintas: ver/alterar

			backups na nuvem
			alguma coisa que me der na telha
				atualizações

	IMDB API
		advanced_search
		top_movies
		most_popular
		procurar mais coisa pra usar

	MODO ADM (?)
		postar alguma coisa pra aparecer em tds apps?

	IMPLEMENTAR SERIES (?)









MOVIE INFO TYPES

	basic movie info:
	    title, year, id(?), image, genres, runtimeStr

	complete movie info: (1 API call)
	    title, originalTitle
	    type
	    year
	    image
	    runtimeStr
	    plot, plotLocal
	    directors, directorList
	    writers, writerList
	    stars, starList
	    actorList
	    genres, genreList
	    contentRating
	    imDbRating
	    imDbRatingVotes
	    posters
	    images
	    trailer
	    keywords, keywordList
	    similars

	aditional movie info: (1 API call each)
	    FullActor,FullCast,Posters,Images,Trailer,Ratings,Wikipedia 

	all possible movie info:
	    id
	    title
	    originalTitle
	    fullTitle
	    type
	    year
	    image
	    releaseDate
	    runtimeMins
	    runtimeStr
	    plot
	    plotLocal
	    plotLocalIsRtl
	    awards
	    directors
	    directorList
	    writers
	    writerList
	    stars
	    starList
	    actorList
	    fullCast
	    genres
	    genreList
	    companies
	    companyList
	    countries
	    countryList
	    languages
	    languageList
	    contentRating
	    imDbRating
	    imDbRatingVotes
	    metacriticRating
	    ratings
	    wikipedia
	    posters
	    images
	    trailer
	    boxOffice
	    tagline
	    keywords
	    keywordList
	    similars
	    tvSeriesInfo
	    tvEpisodeInfo
	    errorMessage
